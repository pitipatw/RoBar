out = Dict() 
out["elements"] = mod_elements
out["node_points"] = node_points
out["areas"] = mod_mod_pos_areas
msg = JSON.json(out)
open(joinpath(@__DIR__, "04APR2023.json"), "w") do f
    write(f, msg)
end

area_filter = mod_pos_areas .> 0 ;
mod_mod_pos_areas = mod_pos_areas[area_filter] ;
mod_σ = σ[ area_filter] ;

mod_elements = Dict{Int64, Tuple{Int64, Int64}}()
counter = 0 
for i in eachindex( area_filter ) 
    if area_filter[i] == true
        counter += 1
        mod_elements[counter] = elements[i]
    end
end

#plot truss structure
scale = 5.0
truss0 = Figure(resolution = (1000, 1000));
axis0 = Axis(truss0[1,1], xlabel = "x", ylabel = "y", aspect=DataAspect());
axis1 = Axis(truss0[2,1] , xlabel = "x", ylabel = "y", aspect=DataAspect()); 
#axis equal
for i in eachindex(mod_elements)
    element = mod_elements[i]
    node1 = node_points[element[1]]
    node2 = node_points[element[2]]
    if mod_σ[i] > 0 
    lines!(axis0, [node1[1], node2[1]], [node1[2], node2[2]], linewidth = mod_pos_areas[i]*scale , color=:blue)
    lines!(axis1, [node1[1], node2[1]], [node1[2], node2[2]], linewidth = mod_mod_pos_areas[i]*scale, color=:blue)
    else 

    lines!(axis0, [node1[1], node2[1]], [node1[2], node2[2]], linewidth = mod_pos_areas[i]*scale , color=:red)
    lines!(axis1, [node1[1], node2[1]], [node1[2], node2[2]], linewidth = mod_mod_pos_areas[i]*scale, color=:red)
    end

end

f0 = display(truss0)